{"version":3,"file":"counter-block/view.js","mappings":";;;;AAAAA,OAAO,CAACC,GAAG,CAAC,oCAAoC,CAAC;AAEjDC,QAAQ,CAACC,gBAAgB,CACxB,kBAAkB,EAClB,YAAY;EACXH,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;EACxC;EACA,MAAMG,aAAa,GAAGF,QAAQ,CAACG,gBAAgB,CAAC,mBAAmB,CAAC;EACpEL,OAAO,CAACC,GAAG,CAAC,SAASG,aAAa,CAACE,MAAM,mBAAmB,CAAC;;EAE7D;EACAF,aAAa,CAACG,OAAO,CAAEC,YAAY,IAAK;IACvC,MAAMC,cAAc,GAAGC,UAAU,CAACF,YAAY,CAACG,OAAO,CAACF,cAAc,CAAC;IACtE,MAAMG,YAAY,GAAGF,UAAU,CAACF,YAAY,CAACG,OAAO,CAACC,YAAY,CAAC;IAClE,MAAMC,QAAQ,GAAGH,UAAU,CAACF,YAAY,CAACG,OAAO,CAACE,QAAQ,CAAC;IAC1D,IAAIC,SAAS,GAAGJ,UAAU,CAACF,YAAY,CAACG,OAAO,CAACG,SAAS,CAAC;IAC1D,MAAMC,YAAY,GAAGP,YAAY,CAACG,OAAO,CAACK,SAAS,KAAK,MAAM;IAC9D,MAAMC,gBAAgB,GAAGT,YAAY,CAACG,OAAO,CAACM,gBAAgB,IAAI,IAAI;IACtE,MAAMC,MAAM,GAAGV,YAAY,CAACG,OAAO,CAACO,MAAM,IAAI,EAAE;IAChD,MAAMC,MAAM,GAAGX,YAAY,CAACG,OAAO,CAACQ,MAAM,IAAI,EAAE;IAEhD,MAAMC,UAAU,GAAGZ,YAAY,CAACa,aAAa,CAAC,gBAAgB,CAAC;IAE/DrB,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAE;MAAEQ,cAAc;MAAEG,YAAY;MAAEC,QAAQ;MAAEI,gBAAgB;MAAEC,MAAM;MAAEC;IAAO,CAAC,CAAC;;IAE9G;IACA,MAAMG,IAAI,GAAGC,IAAI,CAACC,GAAG,CAACZ,YAAY,GAAGH,cAAc,CAAC;IACpD,MAAMgB,QAAQ,GAAGZ,QAAQ,GAAGS,IAAI;;IAEhC;IACA,IAAIF,UAAU,EAAE;MACf;MACAA,UAAU,CAACM,WAAW,GAAGjB,cAAc;;MAEvC;MACA,IAAI,CAACM,YAAY,EAAE;QAClBD,SAAS,GAAG,CAAC;MACd;;MAEA;MACAa,UAAU,CAAC,MAAM;QAChB,IAAIC,UAAU,GAAGnB,cAAc;QAE/B,MAAMoB,eAAe,GAAGC,WAAW,CAAC,MAAM;UACzC;UACA,IAAIb,gBAAgB,KAAK,MAAM,EAAE;YAChCW,UAAU,EAAE;UACb,CAAC,MAAM;YACNA,UAAU,EAAE;UACb;;UAEA;UACAR,UAAU,CAACM,WAAW,GAAGE,UAAU;;UAEnC;UACA,IAAIX,gBAAgB,KAAK,MAAM,IAAIW,UAAU,IAAIhB,YAAY,EAAE;YAC9DQ,UAAU,CAACM,WAAW,GAAGd,YAAY;YACrCmB,aAAa,CAACF,eAAe,CAAC;UAC/B,CAAC,MAAM,IAAIZ,gBAAgB,KAAK,IAAI,IAAIW,UAAU,IAAIhB,YAAY,EAAE;YACnEQ,UAAU,CAACM,WAAW,GAAGd,YAAY;YACrCmB,aAAa,CAACF,eAAe,CAAC;UAC/B;QACD,CAAC,EAAEJ,QAAQ,CAAC;MACb,CAAC,EAAEX,SAAS,CAAC;IACd;EACD,CAAC,CAAC;AACH,CAAC,EACD;EAAEkB,IAAI,EAAE;AAAK,CACd,CAAC,C","sources":["webpack://adaire-blocks/./src/counter-block/view.js"],"sourcesContent":["console.log(\"Counter Block - View Script Loaded\");\n\ndocument.addEventListener(\n\t\"DOMContentLoaded\",\n\tfunction () {\n\t\tconsole.log(\"Counter Block - DOM Ready\");\n\t\t// Select ALL counter block instances on the page\n\t\tconst counterBlocks = document.querySelectorAll(\".ab-counter-block\");\n\t\tconsole.log(`Found ${counterBlocks.length} counter block(s)`);\n\n\t\t// Loop through each block instance separately\n\t\tcounterBlocks.forEach((counterBlock) => {\n\t\t\tconst startingNumber = parseFloat(counterBlock.dataset.startingNumber);\n\t\t\tconst endingNumber = parseFloat(counterBlock.dataset.endingNumber);\n\t\t\tconst duration = parseFloat(counterBlock.dataset.duration);\n\t\t\tlet delayTime = parseFloat(counterBlock.dataset.delayTime);\n\t\t\tconst delayEnabled = counterBlock.dataset.delayBool === 'true';\n\t\t\tconst counterDirection = counterBlock.dataset.counterDirection || 'up';\n\t\t\tconst prefix = counterBlock.dataset.prefix || '';\n\t\t\tconst suffix = counterBlock.dataset.suffix || '';\n\t\t\t\n\t\t\tconst displayNum = counterBlock.querySelector(\".displayNumber\");\n\n\t\t\tconsole.log(\"Counter settings:\", { startingNumber, endingNumber, duration, counterDirection, prefix, suffix });\n\n\t\t\t// Calculate interval based on the difference\n\t\t\tconst diff = Math.abs(endingNumber - startingNumber);\n\t\t\tconst interval = duration / diff;\n\n\t\t\t// Counter logic\n\t\t\tif (displayNum) {\n\t\t\t\t// Set initial value\n\t\t\t\tdisplayNum.textContent = startingNumber;\n\t\t\t\t\n\t\t\t\t// If delay is disabled, set delay to 0\n\t\t\t\tif (!delayEnabled) {\n\t\t\t\t\tdelayTime = 0;\n\t\t\t\t}\n\n\t\t\t\t// Run counter after delay\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tlet currentNum = startingNumber;\n\t\t\t\t\t\n\t\t\t\t\tconst counterInterval = setInterval(() => {\n\t\t\t\t\t\t// Count up or down based on direction\n\t\t\t\t\t\tif (counterDirection === 'down') {\n\t\t\t\t\t\t\tcurrentNum--;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcurrentNum++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t// Update display\n\t\t\t\t\t\tdisplayNum.textContent = currentNum;\n\t\t\t\t\t\t\n\t\t\t\t\t\t// Stop when we reach the target\n\t\t\t\t\t\tif (counterDirection === 'down' && currentNum <= endingNumber) {\n\t\t\t\t\t\t\tdisplayNum.textContent = endingNumber;\n\t\t\t\t\t\t\tclearInterval(counterInterval);\n\t\t\t\t\t\t} else if (counterDirection === 'up' && currentNum >= endingNumber) {\n\t\t\t\t\t\t\tdisplayNum.textContent = endingNumber;\n\t\t\t\t\t\t\tclearInterval(counterInterval);\n\t\t\t\t\t\t}\n\t\t\t\t\t}, interval);\n\t\t\t\t}, delayTime);\n\t\t\t}\n\t\t});\n\t},\n\t{ once: true }\n);\n"],"names":["console","log","document","addEventListener","counterBlocks","querySelectorAll","length","forEach","counterBlock","startingNumber","parseFloat","dataset","endingNumber","duration","delayTime","delayEnabled","delayBool","counterDirection","prefix","suffix","displayNum","querySelector","diff","Math","abs","interval","textContent","setTimeout","currentNum","counterInterval","setInterval","clearInterval","once"],"sourceRoot":""}