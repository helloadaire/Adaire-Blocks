{"version":3,"file":"call-to-action-block/view.js","mappings":";;;;AAAA;AACA;;AAEAA,QAAQ,CAACC,gBAAgB,CAAC,kBAAkB,EAAE,MAAM;EACnD;EACA,MAAMC,SAAS,GAAGF,QAAQ,CAACG,gBAAgB,CAAC,YAAY,CAAC;EAEzD,IAAID,SAAS,CAACE,MAAM,KAAK,CAAC,EAAE;EAE5BC,OAAO,CAACC,GAAG,CAAC,SAASJ,SAAS,CAACE,MAAM,0BAA0B,CAAC;EAEhEF,SAAS,CAACK,OAAO,CAAC,CAACC,KAAK,EAAEC,KAAK,KAAK;IACnCJ,OAAO,CAACC,GAAG,CAAC,0BAA0BG,KAAK,GAAG,CAAC,EAAE,CAAC;;IAElD;IACA;;IAEA;IACA,MAAMC,OAAO,GAAGF,KAAK,CAACL,gBAAgB,CAAC,qHAAqH,CAAC;IAE7JO,OAAO,CAACH,OAAO,CAACI,MAAM,IAAI;MACzB;MACAA,MAAM,CAACV,gBAAgB,CAAC,YAAY,EAAE,MAAM;QAC3CU,MAAM,CAACC,KAAK,CAACC,SAAS,GAAG,kBAAkB;QAC3CF,MAAM,CAACC,KAAK,CAACE,UAAU,GAAG,eAAe;MAC1C,CAAC,CAAC;MAEFH,MAAM,CAACV,gBAAgB,CAAC,YAAY,EAAE,MAAM;QAC3CU,MAAM,CAACC,KAAK,CAACC,SAAS,GAAG,eAAe;MACzC,CAAC,CAAC;;MAEF;MACAF,MAAM,CAACV,gBAAgB,CAAC,WAAW,EAAE,MAAM;QAC1CU,MAAM,CAACC,KAAK,CAACC,SAAS,GAAG,2BAA2B;MACrD,CAAC,CAAC;MAEFF,MAAM,CAACV,gBAAgB,CAAC,SAAS,EAAE,MAAM;QACxCU,MAAM,CAACC,KAAK,CAACC,SAAS,GAAG,2BAA2B;MACrD,CAAC,CAAC;IACH,CAAC,CAAC;;IAEF;IACA,MAAME,QAAQ,GAAG,IAAIC,oBAAoB,CAAEC,OAAO,IAAK;MACtDA,OAAO,CAACV,OAAO,CAACW,KAAK,IAAI;QACxB,IAAIA,KAAK,CAACC,cAAc,EAAE;UACzBD,KAAK,CAACE,MAAM,CAACR,KAAK,CAACS,OAAO,GAAG,GAAG;UAChCH,KAAK,CAACE,MAAM,CAACR,KAAK,CAACC,SAAS,GAAG,eAAe;QAC/C;MACD,CAAC,CAAC;IACH,CAAC,EAAE;MACFS,SAAS,EAAE;IACZ,CAAC,CAAC;;IAEF;IACAP,QAAQ,CAACQ,OAAO,CAACf,KAAK,CAAC;;IAEvB;IACAA,KAAK,CAACI,KAAK,CAACS,OAAO,GAAG,GAAG;IACzBb,KAAK,CAACI,KAAK,CAACC,SAAS,GAAG,kBAAkB;IAC1CL,KAAK,CAACI,KAAK,CAACE,UAAU,GAAG,wCAAwC;EAClE,CAAC,CAAC;AACH,CAAC,CAAC,C","sources":["webpack://adaire-blocks/./src/call-to-action-block/view.js"],"sourcesContent":["// Call-to-Action Block Frontend JavaScript\r\n// This file handles any frontend interactions for the call-to-action block\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", () => {\r\n\t// Find all call-to-action blocks\r\n\tconst ctaBlocks = document.querySelectorAll('.cta-block');\r\n\t\r\n\tif (ctaBlocks.length === 0) return;\r\n\t\r\n\tconsole.log(`Found ${ctaBlocks.length} call-to-action block(s)`);\r\n\t\r\n\tctaBlocks.forEach((block, index) => {\r\n\t\tconsole.log(`Initializing CTA block ${index + 1}`);\r\n\t\t\r\n\t\t// Add any frontend interactions here\r\n\t\t// For example, button click handlers, animations, etc.\r\n\t\t\r\n\t\t// Example: Add smooth scroll to buttons if they have href=\"#\"\r\n\t\tconst buttons = block.querySelectorAll('button, .ad-split__content__button button, .ad-stacked__content__button button, .ad-overlay__content__button button');\r\n\t\t\r\n\t\tbuttons.forEach(button => {\r\n\t\t\t// Add hover effects\r\n\t\t\tbutton.addEventListener('mouseenter', () => {\r\n\t\t\t\tbutton.style.transform = 'translateY(-2px)';\r\n\t\t\t\tbutton.style.transition = 'all 0.3s ease';\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tbutton.addEventListener('mouseleave', () => {\r\n\t\t\t\tbutton.style.transform = 'translateY(0)';\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\t// Add click effects\r\n\t\t\tbutton.addEventListener('mousedown', () => {\r\n\t\t\t\tbutton.style.transform = 'translateY(0) scale(0.98)';\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tbutton.addEventListener('mouseup', () => {\r\n\t\t\t\tbutton.style.transform = 'translateY(-2px) scale(1)';\r\n\t\t\t});\r\n\t\t});\r\n\t\t\r\n\t\t// Add entrance animations if needed\r\n\t\tconst observer = new IntersectionObserver((entries) => {\r\n\t\t\tentries.forEach(entry => {\r\n\t\t\t\tif (entry.isIntersecting) {\r\n\t\t\t\t\tentry.target.style.opacity = '1';\r\n\t\t\t\t\tentry.target.style.transform = 'translateY(0)';\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}, {\r\n\t\t\tthreshold: 0.1\r\n\t\t});\r\n\t\t\r\n\t\t// Observe the block for entrance animations\r\n\t\tobserver.observe(block);\r\n\t\t\r\n\t\t// Set initial state for animation\r\n\t\tblock.style.opacity = '0';\r\n\t\tblock.style.transform = 'translateY(30px)';\r\n\t\tblock.style.transition = 'opacity 0.6s ease, transform 0.6s ease';\r\n\t});\r\n});"],"names":["document","addEventListener","ctaBlocks","querySelectorAll","length","console","log","forEach","block","index","buttons","button","style","transform","transition","observer","IntersectionObserver","entries","entry","isIntersecting","target","opacity","threshold","observe"],"sourceRoot":""}