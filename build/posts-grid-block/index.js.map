{"version":3,"file":"posts-grid-block/index.js","mappings":"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;;;;;;;;;;ACAA,iC;;;;;;;;;;ACAA,2C;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;UAEA;UACA;;;;;WCzBA;WACA;WACA;WACA;WACA,+BAA+B,wCAAwC;WACvE;WACA;WACA;WACA;WACA,iBAAiB,qBAAqB;WACtC;WACA;WACA,kBAAkB,qBAAqB;WACvC;WACA;WACA,KAAK;WACL;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,E;;;;;WC3BA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA,E;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA,E;;;;;WCPA,wF;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D,E;;;;;WCNA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,MAAM,qBAAqB;WAC3B;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA,4G;;;;;UEjDA;UACA;UACA;UACA;UACA","sources":["webpack://adaire-blocks/./node_modules/@wordpress/icons/build-module/library/desktop.js","webpack://adaire-blocks/./node_modules/@wordpress/icons/build-module/library/mobile.js","webpack://adaire-blocks/./node_modules/@wordpress/icons/build-module/library/tablet.js","webpack://adaire-blocks/./src/icons/posts-grid.js","webpack://adaire-blocks/./src/posts-grid-block/edit.js","webpack://adaire-blocks/./src/posts-grid-block/index.js","webpack://adaire-blocks/./src/posts-grid-block/save.js","webpack://adaire-blocks/./src/posts-grid-block/style.scss?a4b0","webpack://adaire-blocks/external window [\"wp\",\"apiFetch\"]","webpack://adaire-blocks/external window [\"wp\",\"blockEditor\"]","webpack://adaire-blocks/external window [\"wp\",\"blocks\"]","webpack://adaire-blocks/external window [\"wp\",\"components\"]","webpack://adaire-blocks/external window [\"wp\",\"element\"]","webpack://adaire-blocks/external window [\"wp\",\"i18n\"]","webpack://adaire-blocks/external window [\"wp\",\"primitives\"]","webpack://adaire-blocks/external window \"React\"","webpack://adaire-blocks/external window \"ReactJSXRuntime\"","webpack://adaire-blocks/webpack/bootstrap","webpack://adaire-blocks/webpack/runtime/chunk loaded","webpack://adaire-blocks/webpack/runtime/compat get default export","webpack://adaire-blocks/webpack/runtime/define property getters","webpack://adaire-blocks/webpack/runtime/hasOwnProperty shorthand","webpack://adaire-blocks/webpack/runtime/make namespace object","webpack://adaire-blocks/webpack/runtime/jsonp chunk loading","webpack://adaire-blocks/webpack/before-startup","webpack://adaire-blocks/webpack/startup","webpack://adaire-blocks/webpack/after-startup"],"sourcesContent":["/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst desktop = /*#__PURE__*/_jsx(SVG, {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  viewBox: \"0 0 24 24\",\n  children: /*#__PURE__*/_jsx(Path, {\n    d: \"M20.5 16h-.7V8c0-1.1-.9-2-2-2H6.2c-1.1 0-2 .9-2 2v8h-.7c-.8 0-1.5.7-1.5 1.5h20c0-.8-.7-1.5-1.5-1.5zM5.7 8c0-.3.2-.5.5-.5h11.6c.3 0 .5.2.5.5v7.6H5.7V8z\"\n  })\n});\nexport default desktop;\n//# sourceMappingURL=desktop.js.map","/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst mobile = /*#__PURE__*/_jsx(SVG, {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  viewBox: \"0 0 24 24\",\n  children: /*#__PURE__*/_jsx(Path, {\n    d: \"M15 4H9c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h6c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm.5 14c0 .3-.2.5-.5.5H9c-.3 0-.5-.2-.5-.5V6c0-.3.2-.5.5-.5h6c.3 0 .5.2.5.5v12zm-4.5-.5h2V16h-2v1.5z\"\n  })\n});\nexport default mobile;\n//# sourceMappingURL=mobile.js.map","/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst tablet = /*#__PURE__*/_jsx(SVG, {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  viewBox: \"0 0 24 24\",\n  children: /*#__PURE__*/_jsx(Path, {\n    d: \"M17 4H7c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h10c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm.5 14c0 .3-.2.5-.5.5H7c-.3 0-.5-.2-.5-.5V6c0-.3.2-.5.5-.5h10c.3 0 .5.2.5.5v12zm-7.5-.5h4V16h-4v1.5z\"\n  })\n});\nexport default tablet;\n//# sourceMappingURL=tablet.js.map","import React from \"react\";\r\n\r\nconst PostsGridIcon = () => {\r\n\treturn (\r\n\t\t<svg\r\n\t\t\twidth=\"24\"\r\n\t\t\theight=\"24\"\r\n\t\t\tviewBox=\"0 0 24 24\"\r\n\t\t\tfill=\"none\"\r\n\t\t\txmlns=\"http://www.w3.org/2000/svg\"\r\n\t\t>\r\n\t\t\t<g clipPath=\"url(#clip0_4_45)\">\r\n\t\t\t\t<path\r\n\t\t\t\t\td=\"M0 5C0 2.23858 2.23858 0 5 0H19C21.7614 0 24 2.23858 24 5V19C24 21.7614 21.7614 24 19 24H5C2.23858 24 0 21.7614 0 19V5Z\"\r\n\t\t\t\t\tfill=\"#F0F0F1\"\r\n\t\t\t\t/>\r\n\t\t\t\t<path\r\n\t\t\t\t\td=\"M9 3H4C3.44772 3 3 3.44772 3 4V9C3 9.55229 3.44772 10 4 10H9C9.55229 10 10 9.55229 10 9V4C10 3.44772 9.55229 3 9 3Z\"\r\n\t\t\t\t\tfill=\"#F0F0F1\"\r\n\t\t\t\t\tstroke=\"#FF0000\"\r\n\t\t\t\t\tstrokeWidth=\"1.5\"\r\n\t\t\t\t\tstrokeLinecap=\"round\"\r\n\t\t\t\t\tstrokeLinejoin=\"round\"\r\n\t\t\t\t/>\r\n\t\t\t\t<path\r\n\t\t\t\t\td=\"M20 3H15C14.4477 3 14 3.44772 14 4V9C14 9.55229 14.4477 10 15 10H20C20.5523 10 21 9.55229 21 9V4C21 3.44772 20.5523 3 20 3Z\"\r\n\t\t\t\t\tfill=\"#F0F0F1\"\r\n\t\t\t\t\tstroke=\"black\"\r\n\t\t\t\t\tstrokeWidth=\"1.5\"\r\n\t\t\t\t\tstrokeLinecap=\"round\"\r\n\t\t\t\t\tstrokeLinejoin=\"round\"\r\n\t\t\t\t/>\r\n\t\t\t\t<path\r\n\t\t\t\t\td=\"M20 14H15C14.4477 14 14 14.4477 14 15V20C14 20.5523 14.4477 21 15 21H20C20.5523 21 21 20.5523 21 20V15C21 14.4477 20.5523 14 20 14Z\"\r\n\t\t\t\t\tfill=\"#F0F0F1\"\r\n\t\t\t\t\tstroke=\"#FF0000\"\r\n\t\t\t\t\tstrokeWidth=\"1.5\"\r\n\t\t\t\t\tstrokeLinecap=\"round\"\r\n\t\t\t\t\tstrokeLinejoin=\"round\"\r\n\t\t\t\t/>\r\n\t\t\t\t<path\r\n\t\t\t\t\td=\"M9 14H4C3.44772 14 3 14.4477 3 15V20C3 20.5523 3.44772 21 4 21H9C9.55229 21 10 20.5523 10 20V15C10 14.4477 9.55229 14 9 14Z\"\r\n\t\t\t\t\tfill=\"#F0F0F1\"\r\n\t\t\t\t\tstroke=\"black\"\r\n\t\t\t\t\tstrokeWidth=\"1.5\"\r\n\t\t\t\t\tstrokeLinecap=\"round\"\r\n\t\t\t\t\tstrokeLinejoin=\"round\"\r\n\t\t\t\t/>\r\n\t\t\t</g>\r\n\t\t\t<defs>\r\n\t\t\t\t<clipPath id=\"clip0_4_45\">\r\n\t\t\t\t\t<path\r\n\t\t\t\t\t\td=\"M0 5C0 2.23858 2.23858 0 5 0H19C21.7614 0 24 2.23858 24 5V19C24 21.7614 21.7614 24 19 24H5C2.23858 24 0 21.7614 0 19V5Z\"\r\n\t\t\t\t\t\tfill=\"white\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</clipPath>\r\n\t\t\t</defs>\r\n\t\t</svg>\r\n\t);\r\n};\r\n\r\nexport default PostsGridIcon;\r\n","import { __ } from '@wordpress/i18n';\r\nimport { \r\n    useBlockProps, \r\n    InspectorControls,\r\n    PanelColorSettings,\r\n    __experimentalUseCustomUnits as useCustomUnits,\r\n    __experimentalUnitControl as UnitControl\r\n} from '@wordpress/block-editor';\r\nimport {\r\n    PanelBody,\r\n    PanelRow,\r\n    SelectControl,\r\n    ToggleControl,\r\n    RangeControl,\r\n    TextControl,\r\n    Button,\r\n    ButtonGroup,\r\n    Placeholder,\r\n    Spinner,\r\n    Notice,\r\n    __experimentalSpacingSizesControl as SpacingSizesControl,\r\n    __experimentalBoxControl as BoxControl,\r\n    TabPanel\r\n} from '@wordpress/components';\r\nimport { useState, useEffect } from '@wordpress/element';\r\nimport apiFetch from '@wordpress/api-fetch';\r\nimport { desktop, tablet, mobile } from '@wordpress/icons';\r\n\r\nconst Edit = ({ attributes, setAttributes, clientId }) => {\r\n    const [deviceType, setDeviceType] = useState('desktop');\r\n    \r\n    const {\r\n        blockId,\r\n        postsPerPage,\r\n        enablePagination,\r\n        paginationStyle,\r\n        selectedCategories,\r\n        selectedPosts,\r\n        postType,\r\n        excludeCurrentPost,\r\n        showCategories,\r\n        showDate,\r\n        showAuthor,\r\n        showReadTime,\r\n        showExcerpt,\r\n        excerptLength,\r\n        layoutType,\r\n        columns,\r\n        enableFiltering,\r\n        filterPosition,\r\n        filterStyle,\r\n        cardBorderRadius,\r\n        cardPadding,\r\n        cardGap,\r\n        imageHeight,\r\n        imageFit,\r\n        titleColor,\r\n        titleFontSize,\r\n        titleFontWeight,\r\n        excerptColor,\r\n        excerptFontSize,\r\n        excerptFontWeight,\r\n        metaColor,\r\n        metaFontSize,\r\n        metaFontWeight,\r\n        categoryColor,\r\n        categoryBackgroundColor,\r\n        categoryBorderRadius,\r\n        filterBorderRadius,\r\n        paginationBorderRadius,\r\n        enableAnimations,\r\n        animationType,\r\n        transitionAnimation,\r\n        animationDuration,\r\n        animationDelay,\r\n        animationEase,\r\n        enableHoverEffects,\r\n        hoverScale,\r\n        hoverShadow,\r\n        overlayOpacity,\r\n        overlayGradient,\r\n        textAlign,\r\n        containerMode,\r\n        containerMaxWidth,\r\n        marginTop,\r\n        marginRight,\r\n        marginBottom,\r\n        marginLeft\r\n    } = attributes;\r\n\r\n    const [categories, setCategories] = useState([]);\r\n    const [posts, setPosts] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n    const [responsiveColumns, setResponsiveColumns] = useState(columns);\r\n\r\n    // Generate block ID on mount\r\n    useEffect(() => {\r\n        if (!blockId) {\r\n            setAttributes({ blockId: `posts-grid-${clientId}` });\r\n        }\r\n    }, [clientId, blockId, setAttributes]);\r\n\r\n    // Handle responsive columns based on window width and WordPress preview mode\r\n    useEffect(() => {\r\n        const updateResponsiveColumns = () => {\r\n            // Check if we're in WordPress editor responsive preview mode\r\n            const editorCanvas = document.querySelector('.edit-post-visual-editor__content-area');\r\n            const previewDevice = document.querySelector('.is-tablet-preview, .is-mobile-preview');\r\n            \r\n            let effectiveWidth = window.innerWidth;\r\n            \r\n            // Detect WordPress responsive preview mode\r\n            if (document.body.classList.contains('is-mobile-preview')) {\r\n                effectiveWidth = 360; // Mobile preview\r\n            } else if (document.body.classList.contains('is-tablet-preview')) {\r\n                effectiveWidth = 780; // Tablet preview\r\n            } else if (editorCanvas) {\r\n                // Use the actual canvas width if available\r\n                effectiveWidth = editorCanvas.offsetWidth;\r\n            }\r\n            \r\n            if (layoutType === 'normal') {\r\n                if (effectiveWidth <= 768) {\r\n                    setResponsiveColumns(1); // Mobile: 1 column\r\n                } else if (effectiveWidth <= 1024) {\r\n                    setResponsiveColumns(2); // Tablet: 2 columns\r\n                } else {\r\n                    setResponsiveColumns(columns); // Desktop: User-defined\r\n                }\r\n            } else {\r\n                setResponsiveColumns(1); // List is always 1 column\r\n            }\r\n        };\r\n\r\n        // Initial update\r\n        updateResponsiveColumns();\r\n\r\n        // Add resize listener\r\n        window.addEventListener('resize', updateResponsiveColumns);\r\n\r\n        // Watch for WordPress preview mode changes\r\n        const observer = new MutationObserver(updateResponsiveColumns);\r\n        observer.observe(document.body, {\r\n            attributes: true,\r\n            attributeFilter: ['class']\r\n        });\r\n\r\n        // Also observe the editor canvas size changes\r\n        const editorCanvas = document.querySelector('.edit-post-visual-editor__content-area');\r\n        if (editorCanvas) {\r\n            const resizeObserver = new ResizeObserver(updateResponsiveColumns);\r\n            resizeObserver.observe(editorCanvas);\r\n            \r\n            return () => {\r\n                window.removeEventListener('resize', updateResponsiveColumns);\r\n                observer.disconnect();\r\n                resizeObserver.disconnect();\r\n            };\r\n        }\r\n\r\n        // Cleanup\r\n        return () => {\r\n            window.removeEventListener('resize', updateResponsiveColumns);\r\n            observer.disconnect();\r\n        };\r\n    }, [columns, layoutType]);\r\n\r\n    // Fetch categories and posts\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                setLoading(true);\r\n                setError(null);\r\n\r\n                // Try REST API first, but have fallback\r\n                try {\r\n                    console.log('[Posts Grid Editor] Testing REST API...');\r\n                    console.log('[Posts Grid Editor] apiFetch available:', typeof apiFetch);\r\n                    \r\n                    // Test if REST API is available\r\n                    const testResponse = await apiFetch({\r\n                        path: '/wp/v2/',\r\n                        method: 'GET'\r\n                    });\r\n                    console.log('[Posts Grid Editor] REST API test successful:', testResponse);\r\n\r\n                    // Fetch categories\r\n                    try {\r\n                        console.log('[Posts Grid Editor] Fetching categories...');\r\n                        const categoriesResponse = await apiFetch({\r\n                            path: '/wp/v2/categories?per_page=100',\r\n                            method: 'GET'\r\n                        });\r\n                        console.log('[Posts Grid Editor] Categories fetched:', categoriesResponse.length);\r\n                        setCategories(Array.isArray(categoriesResponse) ? categoriesResponse : []);\r\n                    } catch (catError) {\r\n                        console.warn('[Posts Grid Editor] Failed to fetch categories:', catError);\r\n                        setCategories([]);\r\n                    }\r\n\r\n                    // Fetch posts\r\n                    try {\r\n                        // Convert post type to REST API endpoint (e.g., 'post' -> 'posts')\r\n                        const apiEndpoint = postType === 'post' ? 'posts' : postType;\r\n                        let postsPath = `/wp/v2/${apiEndpoint}?per_page=100&_embed=1`;\r\n                        \r\n                        if (selectedCategories.length > 0) {\r\n                            postsPath += `&categories=${selectedCategories.join(',')}`;\r\n                        }\r\n\r\n                        console.log('[Posts Grid Editor] Fetching posts from:', postsPath);\r\n                        console.log('[Posts Grid Editor] Selected categories for filtering:', selectedCategories);\r\n                        \r\n                        const postsResponse = await apiFetch({\r\n                            path: postsPath,\r\n                            method: 'GET'\r\n                        });\r\n                        \r\n                        console.log('[Posts Grid Editor] Posts response:', postsResponse);\r\n                        console.log('[Posts Grid Editor] Posts count:', postsResponse.length);\r\n                        setPosts(Array.isArray(postsResponse) ? postsResponse : []);\r\n                    } catch (postsError) {\r\n                        console.error('[Posts Grid Editor] Failed to fetch posts:', postsError);\r\n                        console.error('[Posts Grid Editor] Error details:', postsError.message, postsError.code);\r\n                        setPosts([]);\r\n                        setError(`REST API Error: ${postsError.message}. The block will work but may not show real data in the editor.`);\r\n                    }\r\n                } catch (apiError) {\r\n                    console.error('[Posts Grid Editor] REST API not available:', apiError);\r\n                    console.error('[Posts Grid Editor] Error type:', apiError.constructor.name);\r\n                    console.error('[Posts Grid Editor] Error message:', apiError.message);\r\n                    console.error('[Posts Grid Editor] Error code:', apiError.code);\r\n                    setError('REST API is not available. This block will work on the frontend but may not show data in the editor. Please check your WordPress REST API settings.');\r\n                    setCategories([]);\r\n                    setPosts([]);\r\n                }\r\n            } catch (err) {\r\n                setError('Failed to initialize block.');\r\n                console.error('Posts Grid Block Error:', err);\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, [postType, selectedCategories]);\r\n\r\n    const blockProps = useBlockProps({\r\n        className: `adaire-posts-grid adaire-posts-grid--${layoutType}`,\r\n        style: {\r\n            '--adaire-posts-grid-columns': columns,\r\n            '--adaire-posts-grid-gap': `${cardGap}px`,\r\n            '--adaire-posts-grid-border-radius': `${cardBorderRadius}px`,\r\n            '--adaire-posts-grid-padding': `${cardPadding}px`,\r\n            '--adaire-posts-grid-image-height': `${imageHeight}px`,\r\n            '--adaire-posts-grid-title-color': titleColor,\r\n            '--adaire-posts-grid-title-font-size': `${titleFontSize}px`,\r\n            '--adaire-posts-grid-title-font-weight': titleFontWeight,\r\n            '--adaire-posts-grid-excerpt-color': excerptColor,\r\n            '--adaire-posts-grid-excerpt-font-size': `${excerptFontSize}px`,\r\n            '--adaire-posts-grid-excerpt-font-weight': excerptFontWeight,\r\n            '--adaire-posts-grid-meta-color': metaColor,\r\n            '--adaire-posts-grid-meta-font-size': `${metaFontSize}px`,\r\n            '--adaire-posts-grid-meta-font-weight': metaFontWeight,\r\n            '--adaire-posts-grid-category-color': categoryColor,\r\n            '--adaire-posts-grid-category-background': categoryBackgroundColor,\r\n            '--adaire-posts-grid-category-border-radius': `${categoryBorderRadius}px`,\r\n            '--adaire-posts-grid-filter-border-radius': `${filterBorderRadius}px`,\r\n            '--adaire-posts-grid-pagination-border-radius': `${paginationBorderRadius}px`,\r\n            '--adaire-posts-grid-hover-scale': hoverScale,\r\n            '--adaire-posts-grid-overlay-opacity': overlayOpacity,\r\n            '--adaire-posts-grid-overlay-gradient': overlayGradient,\r\n            '--container-max-width': `${containerMaxWidth?.desktop?.value ?? containerMaxWidth?.value ?? 1200}${containerMaxWidth?.desktop?.unit ?? containerMaxWidth?.unit ?? 'px'}`,\r\n            '--container-max-width-tablet': `${containerMaxWidth?.tablet?.value ?? 100}${containerMaxWidth?.tablet?.unit ?? '%'}`,\r\n            '--container-max-width-mobile': `${containerMaxWidth?.mobile?.value ?? 100}${containerMaxWidth?.mobile?.unit ?? '%'}`,\r\n            marginTop: `${marginTop?.desktop ?? marginTop ?? 0}px`,\r\n            marginRight: `${marginRight?.desktop ?? marginRight ?? 0}px`,\r\n            marginBottom: `${marginBottom?.desktop ?? marginBottom ?? 0}px`,\r\n            marginLeft: `${marginLeft?.desktop ?? marginLeft ?? 0}px`,\r\n            '--margin-top-tablet': `${marginTop?.tablet ?? marginTop?.desktop ?? marginTop ?? 0}px`,\r\n            '--margin-right-tablet': `${marginRight?.tablet ?? marginRight?.desktop ?? marginRight ?? 0}px`,\r\n            '--margin-bottom-tablet': `${marginBottom?.tablet ?? marginBottom?.desktop ?? marginBottom ?? 0}px`,\r\n            '--margin-left-tablet': `${marginLeft?.tablet ?? marginLeft?.desktop ?? marginLeft ?? 0}px`,\r\n            '--margin-top-mobile': `${marginTop?.mobile ?? marginTop?.desktop ?? marginTop ?? 0}px`,\r\n            '--margin-right-mobile': `${marginRight?.mobile ?? marginRight?.desktop ?? marginRight ?? 0}px`,\r\n            '--margin-bottom-mobile': `${marginBottom?.mobile ?? marginBottom?.desktop ?? marginBottom ?? 0}px`,\r\n            '--margin-left-mobile': `${marginLeft?.mobile ?? marginLeft?.desktop ?? marginLeft ?? 0}px`,\r\n            textAlign: textAlign\r\n        }\r\n    });\r\n\r\n    const toggleCategory = (categoryId) => {\r\n        const newCategories = selectedCategories.includes(categoryId)\r\n            ? selectedCategories.filter(id => id !== categoryId)\r\n            : [...selectedCategories, categoryId];\r\n        console.log('Posts Grid Block Editor: Selected categories changed to:', newCategories);\r\n        setAttributes({ selectedCategories: newCategories });\r\n    };\r\n\r\n    const togglePost = (postId) => {\r\n        const newPosts = selectedPosts.includes(postId)\r\n            ? selectedPosts.filter(id => id !== postId)\r\n            : [...selectedPosts, postId];\r\n        setAttributes({ selectedPosts: newPosts });\r\n    };\r\n\r\n    const animationTypes = [\r\n        { label: 'Fade Up', value: 'fadeUp' },\r\n        { label: 'Fade In', value: 'fadeIn' },\r\n        { label: 'Scale Up', value: 'scaleUp' },\r\n        { label: 'Slide Up', value: 'slideUp' },\r\n        { label: 'Rotate In', value: 'rotateIn' },\r\n        { label: 'Bounce In', value: 'bounceIn' }\r\n    ];\r\n\r\n    const easeTypes = [\r\n        { label: 'Power2 Out', value: 'power2.out' },\r\n        { label: 'Power3 Out', value: 'power3.out' },\r\n        { label: 'Back Out', value: 'back.out' },\r\n        { label: 'Elastic Out', value: 'elastic.out' },\r\n        { label: 'Bounce Out', value: 'bounce.out' },\r\n        { label: 'Circ Out', value: 'circ.out' }\r\n    ];\r\n\r\n    if (loading) {\r\n        return (\r\n            <div {...blockProps}>\r\n                <Placeholder>\r\n                    <Spinner />\r\n                    <p>{__('Loading Posts Grid...', 'posts-grid-block')}</p>\r\n                </Placeholder>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    // Show error as a notice but still render the block\r\n    const showErrorNotice = error && posts.length === 0;\r\n    \r\n    // Debug logging\r\n    console.log('Posts Grid Debug:', {\r\n        postsLength: posts.length,\r\n        error: error,\r\n        showErrorNotice: showErrorNotice,\r\n        postsPerPage: postsPerPage\r\n    });\r\n\r\n    return (\r\n        <>\r\n            <InspectorControls>\r\n                {/* Content Settings */}\r\n                <PanelBody title={__('Content Settings', 'posts-grid-block')} initialOpen={true}>\r\n                    <TextControl\r\n                        label={__('Posts Per Page', 'posts-grid-block')}\r\n                        type=\"number\"\r\n                        value={postsPerPage}\r\n                        onChange={(value) => setAttributes({ postsPerPage: parseInt(value) || 6 })}\r\n                        min={1}\r\n                        max={100}\r\n                        help={__('Number of posts to display per page', 'posts-grid-block')}\r\n                    />\r\n\r\n                    <PanelRow>\r\n                        <ToggleControl\r\n                            label={__('Enable Pagination', 'posts-grid-block')}\r\n                            checked={enablePagination}\r\n                            onChange={(value) => setAttributes({ enablePagination: value })}\r\n                            help={__('Show pagination when there are more posts than posts per page', 'posts-grid-block')}\r\n                        />\r\n                    </PanelRow>\r\n\r\n                    {enablePagination && (\r\n                        <PanelRow>\r\n                            <SelectControl\r\n                                label={__('Pagination Style', 'posts-grid-block')}\r\n                                value={paginationStyle}\r\n                                options={[\r\n                                    { label: __('Page Numbers', 'posts-grid-block'), value: 'numbers' },\r\n                                    { label: __('Load More Button', 'posts-grid-block'), value: 'loadmore' },\r\n                                    { label: __('Previous/Next', 'posts-grid-block'), value: 'prevnext' }\r\n                                ]}\r\n                                onChange={(value) => setAttributes({ paginationStyle: value })}\r\n                            />\r\n                        </PanelRow>\r\n                    )}\r\n                    \r\n                    <PanelRow>\r\n                        <ToggleControl\r\n                            label={__('Exclude Current Post', 'posts-grid-block')}\r\n                            checked={excludeCurrentPost}\r\n                            onChange={(value) => setAttributes({ excludeCurrentPost: value })}\r\n                        />\r\n                    </PanelRow>\r\n\r\n                    <PanelRow>\r\n                        <ToggleControl\r\n                            label={__('Show Categories', 'posts-grid-block')}\r\n                            checked={showCategories}\r\n                            onChange={(value) => setAttributes({ showCategories: value })}\r\n                        />\r\n                    </PanelRow>\r\n\r\n                    <PanelRow>\r\n                        <ToggleControl\r\n                            label={__('Show Date', 'posts-grid-block')}\r\n                            checked={showDate}\r\n                            onChange={(value) => setAttributes({ showDate: value })}\r\n                        />\r\n                    </PanelRow>\r\n\r\n                    <PanelRow>\r\n                        <ToggleControl\r\n                            label={__('Show Author', 'posts-grid-block')}\r\n                            checked={showAuthor}\r\n                            onChange={(value) => setAttributes({ showAuthor: value })}\r\n                        />\r\n                    </PanelRow>\r\n\r\n                    <PanelRow>\r\n                        <ToggleControl\r\n                            label={__('Show Read Time', 'posts-grid-block')}\r\n                            checked={showReadTime}\r\n                            onChange={(value) => setAttributes({ showReadTime: value })}\r\n                        />\r\n                    </PanelRow>\r\n\r\n                    <PanelRow>\r\n                        <ToggleControl\r\n                            label={__('Show Excerpt', 'posts-grid-block')}\r\n                            checked={showExcerpt}\r\n                            onChange={(value) => setAttributes({ showExcerpt: value })}\r\n                        />\r\n                    </PanelRow>\r\n\r\n                    {showExcerpt && (\r\n                        <PanelRow>\r\n                            <RangeControl\r\n                                label={__('Excerpt Length', 'posts-grid-block')}\r\n                                value={excerptLength}\r\n                                onChange={(value) => setAttributes({ excerptLength: value })}\r\n                                min={10}\r\n                                max={50}\r\n                            />\r\n                        </PanelRow>\r\n                    )}\r\n                </PanelBody>\r\n\r\n                {/* Category Selection */}\r\n                <PanelBody title={__('Category Selection', 'posts-grid-block')} initialOpen={false}>\r\n                    <p>{__('Select categories to filter posts:', 'posts-grid-block')}</p>\r\n                    <div style={{ maxHeight: '200px', overflowY: 'auto', border: '1px solid #ddd', padding: '10px' }}>\r\n                        {categories.map(category => (\r\n                            <label key={category.id} style={{ display: 'block', marginBottom: '8px' }}>\r\n                                <input\r\n                                    type=\"checkbox\"\r\n                                    checked={selectedCategories.includes(category.id)}\r\n                                    onChange={() => toggleCategory(category.id)}\r\n                                    style={{ marginRight: '8px' }}\r\n                                />\r\n                                {category.name} ({category.count})\r\n                            </label>\r\n                        ))}\r\n                    </div>\r\n                    <Button\r\n                        isSmall\r\n                        onClick={() => setAttributes({ selectedCategories: [] })}\r\n                        style={{ marginTop: '10px' }}\r\n                    >\r\n                        {__('Clear All', 'posts-grid-block')}\r\n                    </Button>\r\n                </PanelBody>\r\n\r\n                {/* Layout Settings */}\r\n                <PanelBody title={__('Layout Settings', 'posts-grid-block')} initialOpen={false}>\r\n                    <p style={{ marginBottom: '8px', fontWeight: 600 }}>{__('Layout Type', 'posts-grid-block')}</p>\r\n                    <ButtonGroup style={{ marginBottom: '16px' }}>\r\n                        {[\r\n                            { label: __('Grid', 'posts-grid-block'), value: 'normal' },\r\n                            { label: __('List', 'posts-grid-block'), value: 'list' }\r\n                        ].map(opt => (\r\n                            <Button\r\n                                key={opt.value}\r\n                                isPrimary={layoutType === opt.value}\r\n                                isSecondary={layoutType !== opt.value}\r\n                                onClick={() => setAttributes({ layoutType: opt.value })}\r\n                            >{opt.label}</Button>\r\n                        ))}\r\n                    </ButtonGroup>\r\n\r\n                    {layoutType !== 'list' && (\r\n                        <RangeControl\r\n                            label={__('Columns', 'posts-grid-block')}\r\n                            value={columns}\r\n                            onChange={(value) => setAttributes({ columns: value })}\r\n                            min={1}\r\n                            max={6}\r\n                            step={1}\r\n                            withInputField={true}\r\n                            allowReset={true}\r\n                            help={__('Number of columns for grid layout', 'posts-grid-block')}\r\n                        />\r\n                    )}\r\n\r\n                    <SelectControl\r\n                            label={__('Text Alignment', 'posts-grid-block')}\r\n                            value={textAlign}\r\n                            options={[\r\n                                { label: 'Left', value: 'left' },\r\n                                { label: 'Center', value: 'center' },\r\n                                { label: 'Right', value: 'right' }\r\n                            ]}\r\n                            onChange={(value) => setAttributes({ textAlign: value })}\r\n                        />\r\n\r\n                    <RangeControl\r\n                        label={__('Card Gap', 'posts-grid-block')}\r\n                        value={cardGap}\r\n                        onChange={(value) => setAttributes({ cardGap: value })}\r\n                        min={0}\r\n                        max={60}\r\n                        step={1}\r\n                        withInputField={true}\r\n                        allowReset={true}\r\n                    />\r\n\r\n                    <RangeControl\r\n                        label={__('Card Border Radius', 'posts-grid-block')}\r\n                        value={cardBorderRadius}\r\n                        onChange={(value) => setAttributes({ cardBorderRadius: value })}\r\n                        min={0}\r\n                        max={50}\r\n                        step={1}\r\n                        withInputField={true}\r\n                        allowReset={true}\r\n                    />\r\n\r\n                    <RangeControl\r\n                        label={__('Filter Button Border Radius', 'posts-grid-block')}\r\n                        value={filterBorderRadius}\r\n                        onChange={(value) => setAttributes({ filterBorderRadius: value })}\r\n                        min={0}\r\n                        max={50}\r\n                        step={1}\r\n                        withInputField={true}\r\n                        allowReset={true}\r\n                    />\r\n\r\n                    <RangeControl\r\n                        label={__('Pagination Border Radius', 'posts-grid-block')}\r\n                        value={paginationBorderRadius}\r\n                        onChange={(value) => setAttributes({ paginationBorderRadius: value })}\r\n                        min={0}\r\n                        max={50}\r\n                        step={1}\r\n                        withInputField={true}\r\n                        allowReset={true}\r\n                    />\r\n\r\n                    <RangeControl\r\n                        label={__('Card Padding', 'posts-grid-block')}\r\n                            value={cardPadding}\r\n                            onChange={(value) => setAttributes({ cardPadding: value })}\r\n                            min={0}\r\n                            max={60}\r\n                            step={1}\r\n                            withInputField={true}\r\n                            allowReset={true}\r\n                        />\r\n\r\n                    <RangeControl\r\n                        label={__('Image Height', 'posts-grid-block')}\r\n                            value={imageHeight}\r\n                            onChange={(value) => setAttributes({ imageHeight: value })}\r\n                            min={100}\r\n                            max={400}\r\n                            step={10}\r\n                            withInputField={true}\r\n                            allowReset={true}\r\n                        />\r\n\r\n                    <SelectControl\r\n                        label={__('Image Fit', 'posts-grid-block')}\r\n                            value={imageFit}\r\n                            options={[\r\n                                { label: 'Cover', value: 'cover' },\r\n                                { label: 'Contain', value: 'contain' },\r\n                                { label: 'Fill', value: 'fill' }\r\n                            ]}\r\n                            onChange={(value) => setAttributes({ imageFit: value })}\r\n                        />\r\n                </PanelBody>\r\n\r\n                {/* Filtering Settings */}\r\n                <PanelBody title={__('Filtering Settings', 'posts-grid-block')} initialOpen={false}>\r\n                    <PanelRow>\r\n                        <ToggleControl\r\n                            label={__('Enable Category Filtering', 'posts-grid-block')}\r\n                            checked={enableFiltering}\r\n                            onChange={(value) => setAttributes({ enableFiltering: value })}\r\n                        />\r\n                    </PanelRow>\r\n\r\n                </PanelBody>\r\n\r\n                {/* Typography Settings */}\r\n                <PanelBody title={__('Typography Settings', 'posts-grid-block')} initialOpen={false}>\r\n                    <TextControl\r\n                        label={__('Title Font Size (px)', 'posts-grid-block')}\r\n                        type=\"number\"\r\n                        value={titleFontSize}\r\n                        onChange={(value) => setAttributes({ titleFontSize: parseInt(value) || 18 })}\r\n                        min={12}\r\n                        max={48}\r\n                    />\r\n\r\n                    <SelectControl\r\n                        label={__('Title Font Weight', 'posts-grid-block')}\r\n                        value={titleFontWeight}\r\n                        options={[\r\n                            { label: 'Normal', value: '400' },\r\n                            { label: 'Medium', value: '500' },\r\n                            { label: 'Semi Bold', value: '600' },\r\n                            { label: 'Bold', value: '700' }\r\n                        ]}\r\n                        onChange={(value) => setAttributes({ titleFontWeight: value })}\r\n                    />\r\n\r\n                    <TextControl\r\n                        label={__('Excerpt Font Size (px)', 'posts-grid-block')}\r\n                        type=\"number\"\r\n                        value={excerptFontSize}\r\n                        onChange={(value) => setAttributes({ excerptFontSize: parseInt(value) || 14 })}\r\n                        min={10}\r\n                        max={24}\r\n                    />\r\n\r\n                    <SelectControl\r\n                        label={__('Excerpt Font Weight', 'posts-grid-block')}\r\n                        value={excerptFontWeight}\r\n                        options={[\r\n                            { label: 'Normal', value: '400' },\r\n                            { label: 'Medium', value: '500' },\r\n                            { label: 'Semi Bold', value: '600' },\r\n                            { label: 'Bold', value: '700' }\r\n                        ]}\r\n                        onChange={(value) => setAttributes({ excerptFontWeight: value })}\r\n                    />\r\n\r\n                    <TextControl\r\n                        label={__('Meta Font Size (px)', 'posts-grid-block')}\r\n                        type=\"number\"\r\n                        value={metaFontSize}\r\n                        onChange={(value) => setAttributes({ metaFontSize: parseInt(value) || 12 })}\r\n                        min={8}\r\n                        max={20}\r\n                    />\r\n\r\n                    <SelectControl\r\n                        label={__('Meta Font Weight', 'posts-grid-block')}\r\n                        value={metaFontWeight}\r\n                        options={[\r\n                            { label: 'Normal', value: '400' },\r\n                            { label: 'Medium', value: '500' },\r\n                            { label: 'Semi Bold', value: '600' },\r\n                            { label: 'Bold', value: '700' }\r\n                        ]}\r\n                        onChange={(value) => setAttributes({ metaFontWeight: value })}\r\n                    />\r\n                </PanelBody>\r\n\r\n                {/* Color Settings */}\r\n                <PanelColorSettings\r\n                    title={__('Color Settings', 'posts-grid-block')}\r\n                    colorSettings={[\r\n                        {\r\n                            label: __('Title Color', 'posts-grid-block'),\r\n                            value: titleColor,\r\n                            onChange: (value) => setAttributes({ titleColor: value })\r\n                        },\r\n                        {\r\n                            label: __('Excerpt Color', 'posts-grid-block'),\r\n                            value: excerptColor,\r\n                            onChange: (value) => setAttributes({ excerptColor: value })\r\n                        },\r\n                        {\r\n                            label: __('Meta Color', 'posts-grid-block'),\r\n                            value: metaColor,\r\n                            onChange: (value) => setAttributes({ metaColor: value })\r\n                        },\r\n                        {\r\n                            label: __('Category Color', 'posts-grid-block'),\r\n                            value: categoryColor,\r\n                            onChange: (value) => setAttributes({ categoryColor: value })\r\n                        },\r\n                        {\r\n                            label: __('Category Background', 'posts-grid-block'),\r\n                            value: categoryBackgroundColor,\r\n                            onChange: (value) => setAttributes({ categoryBackgroundColor: value })\r\n                        }\r\n                    ]}\r\n                />\r\n\r\n                {/* Animation Settings */}\r\n                <PanelBody title={__('Animation Settings', 'posts-grid-block')} initialOpen={false}>\r\n                    <PanelRow>\r\n                        <ToggleControl\r\n                            label={__('Enable Animations', 'posts-grid-block')}\r\n                            checked={enableAnimations}\r\n                            onChange={(value) => setAttributes({ enableAnimations: value })}\r\n                        />\r\n                    </PanelRow>\r\n\r\n                    {enableAnimations && (\r\n                        <>\r\n                            <PanelRow>\r\n                                <SelectControl\r\n                                    label={__('Transition Animation', 'posts-grid-block')}\r\n                                    value={transitionAnimation}\r\n                                    options={[\r\n                                        { label: __('Fade', 'posts-grid-block'), value: 'fade' },\r\n                                        { label: __('Fade Up', 'posts-grid-block'), value: 'fadeUp' },\r\n                                        { label: __('Fade Down', 'posts-grid-block'), value: 'fadeDown' },\r\n                                        { label: __('Scale', 'posts-grid-block'), value: 'scale' },\r\n                                        { label: __('Slide Left', 'posts-grid-block'), value: 'slideLeft' },\r\n                                        { label: __('Slide Right', 'posts-grid-block'), value: 'slideRight' },\r\n                                        { label: __('Flip', 'posts-grid-block'), value: 'flip' },\r\n                                        { label: __('FLIP (Smart Position)', 'posts-grid-block'), value: 'flipPosition' }\r\n                                    ]}\r\n                                    onChange={(value) => setAttributes({ transitionAnimation: value })}\r\n                                    help={__('Animation when switching pages or categories', 'posts-grid-block')}\r\n                                />\r\n                            </PanelRow>\r\n\r\n                            <PanelRow>\r\n                                <RangeControl\r\n                                    label={__('Animation Duration', 'posts-grid-block')}\r\n                                    value={animationDuration}\r\n                                    onChange={(value) => setAttributes({ animationDuration: value })}\r\n                                    min={0.1}\r\n                                    max={2}\r\n                                    step={0.1}\r\n                                    withInputField={true}\r\n                                    allowReset={true}\r\n                                />\r\n                            </PanelRow>\r\n\r\n                            <PanelRow>\r\n                                <RangeControl\r\n                                    label={__('Animation Delay', 'posts-grid-block')}\r\n                                    value={animationDelay}\r\n                                    onChange={(value) => setAttributes({ animationDelay: value })}\r\n                                    min={0}\r\n                                    max={0.5}\r\n                                    step={0.05}\r\n                                    withInputField={true}\r\n                                    allowReset={true}\r\n                                />\r\n                            </PanelRow>\r\n\r\n                            <PanelRow>\r\n                                <SelectControl\r\n                                    label={__('Animation Ease', 'posts-grid-block')}\r\n                                    value={animationEase}\r\n                                    options={easeTypes}\r\n                                    onChange={(value) => setAttributes({ animationEase: value })}\r\n                                />\r\n                            </PanelRow>\r\n\r\n                            <PanelRow>\r\n                                <ToggleControl\r\n                                    label={__('Enable Hover Effects', 'posts-grid-block')}\r\n                                    checked={enableHoverEffects}\r\n                                    onChange={(value) => setAttributes({ enableHoverEffects: value })}\r\n                                />\r\n                            </PanelRow>\r\n\r\n                            {enableHoverEffects && (\r\n                                <>\r\n                                    <PanelRow>\r\n                                        <RangeControl\r\n                                            label={__('Hover Scale', 'posts-grid-block')}\r\n                                            value={hoverScale}\r\n                                            onChange={(value) => setAttributes({ hoverScale: value })}\r\n                                            min={1}\r\n                                            max={1.2}\r\n                                            step={0.05}\r\n                                            withInputField={true}\r\n                                            allowReset={true}\r\n                                        />\r\n                                    </PanelRow>\r\n\r\n                                    <PanelRow>\r\n                                        <ToggleControl\r\n                                            label={__('Hover Shadow', 'posts-grid-block')}\r\n                                            checked={hoverShadow}\r\n                                            onChange={(value) => setAttributes({ hoverShadow: value })}\r\n                                        />\r\n                                    </PanelRow>\r\n                                </>\r\n                            )}\r\n                        </>\r\n                    )}\r\n                </PanelBody>\r\n\r\n                {/* Container Settings */}\r\n                <PanelBody title={__('Container Settings', 'posts-grid-block')} initialOpen={false}>\r\n                    <ButtonGroup>\r\n                        {[\r\n                            { label: __('Full Width', 'posts-grid-block'), value: 'full' },\r\n                            { label: __('Constrained', 'posts-grid-block'), value: 'constrained' }\r\n                        ].map(opt => (\r\n                            <Button\r\n                                key={opt.value}\r\n                                isPrimary={containerMode === opt.value}\r\n                                isSecondary={containerMode !== opt.value}\r\n                                onClick={() => setAttributes({ containerMode: opt.value })}\r\n                            >{opt.label}</Button>\r\n                        ))}\r\n                    </ButtonGroup>\r\n                    {containerMode === 'constrained' && (\r\n                        <>\r\n                            <p style={{ marginTop: '16px', marginBottom: '8px', fontWeight: 600 }}>{__('Max Width', 'posts-grid-block')}</p>\r\n                            <ButtonGroup style={{ marginBottom: '12px' }}>\r\n                                <Button\r\n                                    icon={desktop}\r\n                                    isPrimary={deviceType === 'desktop'}\r\n                                    onClick={() => setDeviceType('desktop')}\r\n                                    label={__('Desktop', 'posts-grid-block')}\r\n                                />\r\n                                <Button\r\n                                    icon={tablet}\r\n                                    isPrimary={deviceType === 'tablet'}\r\n                                    onClick={() => setDeviceType('tablet')}\r\n                                    label={__('Tablet', 'posts-grid-block')}\r\n                                />\r\n                                <Button\r\n                                    icon={mobile}\r\n                                    isPrimary={deviceType === 'mobile'}\r\n                                    onClick={() => setDeviceType('mobile')}\r\n                                    label={__('Mobile', 'posts-grid-block')}\r\n                                />\r\n                            </ButtonGroup>\r\n                            <div style={{ display: 'flex', gap: '8px' }}>\r\n                                <TextControl\r\n                                    type=\"number\"\r\n                                    value={containerMaxWidth?.[deviceType]?.value ?? (deviceType === 'desktop' ? 1200 : 100)}\r\n                                    onChange={(v) => setAttributes({ \r\n                                        containerMaxWidth: { \r\n                                            ...(containerMaxWidth || {}), \r\n                                            [deviceType]: { \r\n                                                ...(containerMaxWidth?.[deviceType] || {}), \r\n                                                value: Number(v) \r\n                                            }\r\n                                        } \r\n                                    })}\r\n                                />\r\n                                <ButtonGroup>\r\n                                    {['px', '%', 'rem', 'vw'].map(u => (\r\n                                        <Button\r\n                                            key={u}\r\n                                            isPrimary={(containerMaxWidth?.[deviceType]?.unit ?? (deviceType === 'desktop' ? 'px' : '%')) === u}\r\n                                            isSecondary={(containerMaxWidth?.[deviceType]?.unit ?? (deviceType === 'desktop' ? 'px' : '%')) !== u}\r\n                                            onClick={() => setAttributes({ \r\n                                                containerMaxWidth: { \r\n                                                    ...(containerMaxWidth || {}), \r\n                                                    [deviceType]: { \r\n                                                        ...(containerMaxWidth?.[deviceType] || {}), \r\n                                                        unit: u \r\n                                                    }\r\n                                                } \r\n                                            })}\r\n                                        >{u}</Button>\r\n                                    ))}\r\n                                </ButtonGroup>\r\n                            </div>\r\n                        </>\r\n                    )}\r\n\r\n                    <p style={{ marginTop: '16px', marginBottom: '8px', fontWeight: 600 }}>{__('Margins', 'posts-grid-block')}</p>\r\n                    <ButtonGroup style={{ marginBottom: '12px' }}>\r\n                        <Button\r\n                            icon={desktop}\r\n                            isPrimary={deviceType === 'desktop'}\r\n                            onClick={() => setDeviceType('desktop')}\r\n                            label={__('Desktop', 'posts-grid-block')}\r\n                        />\r\n                        <Button\r\n                            icon={tablet}\r\n                            isPrimary={deviceType === 'tablet'}\r\n                            onClick={() => setDeviceType('tablet')}\r\n                            label={__('Tablet', 'posts-grid-block')}\r\n                        />\r\n                        <Button\r\n                            icon={mobile}\r\n                            isPrimary={deviceType === 'mobile'}\r\n                            onClick={() => setDeviceType('mobile')}\r\n                            label={__('Mobile', 'posts-grid-block')}\r\n                        />\r\n                    </ButtonGroup>\r\n                    <BoxControl\r\n                        values={{\r\n                            top: marginTop?.[deviceType] ?? 0,\r\n                            right: marginRight?.[deviceType] ?? 0,\r\n                            bottom: marginBottom?.[deviceType] ?? 0,\r\n                            left: marginLeft?.[deviceType] ?? 0\r\n                        }}\r\n                        onChange={(value) => setAttributes({\r\n                            marginTop: { ...(marginTop || {}), [deviceType]: value.top || 0 },\r\n                            marginRight: { ...(marginRight || {}), [deviceType]: value.right || 0 },\r\n                            marginBottom: { ...(marginBottom || {}), [deviceType]: value.bottom || 0 },\r\n                            marginLeft: { ...(marginLeft || {}), [deviceType]: value.left || 0 }\r\n                        })}\r\n                        units={[\r\n                            { value: 'px', label: 'px' },\r\n                            { value: 'em', label: 'em' },\r\n                            { value: 'rem', label: 'rem' },\r\n                            { value: '%', label: '%' }\r\n                        ]}\r\n                    />\r\n                </PanelBody>\r\n            </InspectorControls>\r\n\r\n            <div {...blockProps}>\r\n                {showErrorNotice && (\r\n                    <Notice status=\"warning\" isDismissible={false} style={{marginBottom: '20px'}}>\r\n                        {error}\r\n                    </Notice>\r\n                )}\r\n                \r\n                <div className={`adaire-posts-grid__container ${containerMode === 'constrained' ? 'is-constrained' : ''}`}>\r\n                    {enableFiltering && filterPosition === 'top' && (\r\n                        <div className=\"adaire-posts-grid__filters\">\r\n                            <div className=\"adaire-posts-grid__filter-list\">\r\n                                <button className=\"adaire-posts-grid__filter-btn is-active\">\r\n                                    {__('All', 'posts-grid-block')}\r\n                                </button>\r\n                                {categories.slice(0, 5).map(category => (\r\n                                    <button key={category.id} className=\"adaire-posts-grid__filter-btn\">\r\n                                        {category.name}\r\n                                    </button>\r\n                                ))}\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                    \r\n                    <div \r\n                        className=\"adaire-posts-grid__grid\" \r\n                        style={{\r\n                            gridTemplateColumns: layoutType === 'list' \r\n                                ? '1fr' \r\n                                : `repeat(${responsiveColumns}, 1fr)`\r\n                        }}\r\n                    >\r\n                        {(posts.length > 0 && !error) ? posts.slice(0, postsPerPage).map((post, index) => (\r\n                            <div \r\n                                key={post.id} \r\n                                className={`adaire-posts-grid__item ${layoutType === 'list' ? 'list__view' : ''}`}\r\n                                onClick={() => window.open(post.link, '_blank')}\r\n                                style={{ cursor: 'pointer' }}\r\n                                title={`View: ${post.title.rendered}`}\r\n                            >\r\n                                <div className=\"adaire-posts-grid__image\">\r\n                                    {post.featured_media ? (\r\n                                        <img \r\n                                            src={post._embedded?.['wp:featuredmedia']?.[0]?.source_url || '/placeholder.jpg'} \r\n                                            alt={post.title.rendered}\r\n                                        />\r\n                                    ) : (\r\n                                        <div className=\"adaire-posts-grid__placeholder\">\r\n                                            <span>{__('No Image', 'posts-grid-block')}</span>\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n                                \r\n                                <div className=\"adaire-posts-grid__content\">\r\n                                    {showCategories && post.categories && post.categories.length > 0 && (() => {\r\n                                            const filteredCats = post.categories.filter(catId => \r\n                                                selectedCategories.length === 0 || selectedCategories.includes(catId)\r\n                                            );\r\n                                            console.log('Post categories:', post.categories, 'Selected:', selectedCategories, 'Filtered:', filteredCats);\r\n                                            return filteredCats.length > 0;\r\n                                        })() && (\r\n                                            <div className=\"adaire-posts-grid__categories\">\r\n                                                {post.categories\r\n                                                    .filter(catId => selectedCategories.length === 0 || selectedCategories.includes(catId))\r\n                                                    .slice(0, 2)\r\n                                                    .map(catId => {\r\n                                                        const category = categories.find(cat => cat.id === catId);\r\n                                                        return category ? (\r\n                                                            <span key={catId} className=\"adaire-posts-grid__category\">\r\n                                                                {category.name}\r\n                                                            </span>\r\n                                                        ) : null;\r\n                                                    })}\r\n                                            </div>\r\n                                        )}\r\n                                        <h3 className=\"adaire-posts-grid__title\">\r\n                                            {post.title.rendered}\r\n                                        </h3>\r\n                                        {showExcerpt && (\r\n                                            <div className=\"adaire-posts-grid__excerpt\">\r\n                                                {post.excerpt.rendered.replace(/<[^>]*>/g, '').substring(0, excerptLength * 5)}...\r\n                                            </div>\r\n                                        )}\r\n                                        {(showDate || showAuthor || showReadTime) && (\r\n                                            <div className=\"adaire-posts-grid__meta\">\r\n                                                {showDate && (\r\n                                                    <span className=\"adaire-posts-grid__date\">\r\n                                                        {new Date(post.date).toLocaleDateString()}\r\n                                                    </span>\r\n                                                )}\r\n                                                {showAuthor && (\r\n                                                    <span className=\"adaire-posts-grid__author\">\r\n                                                        {post._embedded?.author?.[0]?.name || 'Unknown'}\r\n                                                    </span>\r\n                                                )}\r\n                                                {showReadTime && (\r\n                                                    <span className=\"adaire-posts-grid__read-time\">\r\n                                                        3 min read\r\n                                                    </span>\r\n                                                )}\r\n                                            </div>\r\n                                        )}\r\n                                </div>\r\n                            </div>\r\n                        )) : (\r\n                            // Fallback preview when no posts are available\r\n                            Array.from({ length: Math.max(1, Math.min(postsPerPage, 4)) }, (_, index) => (\r\n                                <div \r\n                                    key={`preview-${index}`} \r\n                                    className={`adaire-posts-grid__item ${layoutType === 'list' ? 'list__view' : ''}`}\r\n                                    style={{ cursor: 'pointer' }}\r\n                                    title=\"Preview - Entire card will be clickable on frontend\"\r\n                                >\r\n                                    <div className=\"adaire-posts-grid__image\">\r\n                                        <div className=\"adaire-posts-grid__placeholder\">\r\n                                            <span>{__('No Image', 'posts-grid-block')}</span>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"adaire-posts-grid__content\">\r\n                                        {showCategories && (\r\n                                            <div className=\"adaire-posts-grid__categories\">\r\n                                                <span className=\"adaire-posts-grid__category\">\r\n                                                    {__('Sample Category', 'posts-grid-block')}\r\n                                                </span>\r\n                                            </div>\r\n                                        )}\r\n                                        <h3 className=\"adaire-posts-grid__title\">\r\n                                            {__('Sample Post Title', 'posts-grid-block')}\r\n                                        </h3>\r\n                                        {showExcerpt && (\r\n                                            <div className=\"adaire-posts-grid__excerpt\">\r\n                                                {__('This is a preview of how your posts will look. The block will display your actual posts on the frontend.', 'posts-grid-block')}\r\n                                            </div>\r\n                                        )}\r\n                                        {(showDate || showAuthor || showReadTime) && (\r\n                                            <div className=\"adaire-posts-grid__meta\">\r\n                                                {showDate && (\r\n                                                    <span className=\"adaire-posts-grid__date\">\r\n                                                        {new Date().toLocaleDateString()}\r\n                                                    </span>\r\n                                                )}\r\n                                                {showAuthor && (\r\n                                                    <span className=\"adaire-posts-grid__author\">\r\n                                                        {__('Sample Author', 'posts-grid-block')}\r\n                                                    </span>\r\n                                                )}\r\n                                                {showReadTime && (\r\n                                                    <span className=\"adaire-posts-grid__read-time\">\r\n                                                        {__('3 min read', 'posts-grid-block')}\r\n                                                    </span>\r\n                                                )}\r\n                                            </div>\r\n                                        )}\r\n                                    </div>\r\n                                </div>\r\n                            ))\r\n                        )}\r\n                    </div>\r\n                    \r\n                    {enableFiltering && filterPosition === 'bottom' && (\r\n                        <div className=\"adaire-posts-grid__filters\">\r\n                            <div className=\"adaire-posts-grid__filter-list\">\r\n                                <button className=\"adaire-posts-grid__filter-btn is-active\">\r\n                                    {__('All', 'posts-grid-block')}\r\n                                </button>\r\n                                {categories.slice(0, 5).map(category => (\r\n                                    <button key={category.id} className=\"adaire-posts-grid__filter-btn\">\r\n                                        {category.name}\r\n                                    </button>\r\n                                ))}\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n\r\n                    {enablePagination && posts.length > postsPerPage && (\r\n                        <div className=\"adaire-posts-grid__pagination\">\r\n                            {paginationStyle === 'numbers' && (\r\n                                <div className=\"adaire-posts-grid__pagination-wrapper\">\r\n                                    <button className=\"adaire-posts-grid__pagination-btn adaire-posts-grid__pagination-prev is-disabled\" disabled>\r\n                                        <span>← Previous</span>\r\n                                    </button>\r\n                                    <div className=\"adaire-posts-grid__pagination-numbers\">\r\n                                        <button className=\"adaire-posts-grid__pagination-number is-active\">1</button>\r\n                                        <button className=\"adaire-posts-grid__pagination-number\">2</button>\r\n                                        <button className=\"adaire-posts-grid__pagination-number\">3</button>\r\n                                    </div>\r\n                                    <button className=\"adaire-posts-grid__pagination-btn adaire-posts-grid__pagination-next\">\r\n                                        <span>Next →</span>\r\n                                    </button>\r\n                                </div>\r\n                            )}\r\n                            {paginationStyle === 'loadmore' && (\r\n                                <div className=\"adaire-posts-grid__pagination-wrapper adaire-posts-grid__pagination-wrapper--loadmore\">\r\n                                    <button className=\"adaire-posts-grid__pagination-loadmore\">\r\n                                        {__('Load More', 'posts-grid-block')}\r\n                                    </button>\r\n                                </div>\r\n                            )}\r\n                            {paginationStyle === 'prevnext' && (\r\n                                <div className=\"adaire-posts-grid__pagination-wrapper adaire-posts-grid__pagination-wrapper--prevnext\">\r\n                                    <button className=\"adaire-posts-grid__pagination-btn adaire-posts-grid__pagination-prev is-disabled\" disabled>\r\n                                        <span>← Previous</span>\r\n                                    </button>\r\n                                    <span className=\"adaire-posts-grid__pagination-info\">\r\n                                        {__('Page 1 of 3', 'posts-grid-block')}\r\n                                    </span>\r\n                                    <button className=\"adaire-posts-grid__pagination-btn adaire-posts-grid__pagination-next\">\r\n                                        <span>Next →</span>\r\n                                    </button>\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Edit;\r\n","import { registerBlockType } from '@wordpress/blocks';\r\nimport { useBlockProps } from '@wordpress/block-editor';\r\nimport './style.scss';\r\nimport Edit from './edit';\r\nimport save from './save';\r\nimport metadata from './block.json';\r\n\r\n// Import icon directly\r\nimport PostsGridIcon from '../icons/posts-grid';\r\n\r\nregisterBlockType(metadata.name, {\r\n    edit: Edit,\r\n    save,\r\n    icon: PostsGridIcon,\r\n});\r\n","import { useBlockProps } from '@wordpress/block-editor';\r\n\r\nexport default function save({ attributes }) {\r\n    const {\r\n        blockId,\r\n        postsPerPage,\r\n        enablePagination,\r\n        paginationStyle,\r\n        selectedCategories,\r\n        selectedPosts,\r\n        postType,\r\n        excludeCurrentPost,\r\n        showCategories,\r\n        showDate,\r\n        showAuthor,\r\n        showReadTime,\r\n        showExcerpt,\r\n        excerptLength,\r\n        layoutType,\r\n        columns,\r\n        enableFiltering,\r\n        filterPosition,\r\n        filterStyle,\r\n        cardBorderRadius,\r\n        cardPadding,\r\n        cardGap,\r\n        imageHeight,\r\n        imageFit,\r\n        titleColor,\r\n        titleFontSize,\r\n        titleFontWeight,\r\n        excerptColor,\r\n        excerptFontSize,\r\n        excerptFontWeight,\r\n        metaColor,\r\n        metaFontSize,\r\n        metaFontWeight,\r\n        categoryColor,\r\n        categoryBackgroundColor,\r\n        categoryBorderRadius,\r\n        filterBorderRadius,\r\n        paginationBorderRadius,\r\n        enableAnimations,\r\n        animationType,\r\n        transitionAnimation,\r\n        animationDuration,\r\n        animationDelay,\r\n        animationEase,\r\n        enableHoverEffects,\r\n        hoverScale,\r\n        hoverShadow,\r\n        overlayOpacity,\r\n        overlayGradient,\r\n        textAlign,\r\n        containerMode,\r\n        containerMaxWidth,\r\n        marginTop,\r\n        marginRight,\r\n        marginBottom,\r\n        marginLeft\r\n    } = attributes;\r\n\r\n    const blockProps = useBlockProps.save({\r\n        className: `adaire-posts-grid adaire-posts-grid--${layoutType}`,\r\n        'data-block-id': blockId,\r\n        'data-posts-per-page': postsPerPage,\r\n        'data-enable-pagination': enablePagination,\r\n        'data-pagination-style': paginationStyle,\r\n        'data-selected-categories': JSON.stringify(selectedCategories),\r\n        'data-selected-posts': JSON.stringify(selectedPosts),\r\n        'data-post-type': postType,\r\n        'data-exclude-current-post': excludeCurrentPost,\r\n        'data-show-categories': showCategories,\r\n        'data-show-date': showDate,\r\n        'data-show-author': showAuthor,\r\n        'data-show-read-time': showReadTime,\r\n        'data-show-excerpt': showExcerpt,\r\n        'data-excerpt-length': excerptLength,\r\n        'data-layout-type': layoutType,\r\n        'data-columns': columns,\r\n        'data-enable-filtering': enableFiltering,\r\n        'data-filter-position': filterPosition,\r\n        'data-filter-style': filterStyle,\r\n        'data-card-border-radius': cardBorderRadius,\r\n        'data-card-padding': cardPadding,\r\n        'data-card-gap': cardGap,\r\n        'data-image-height': imageHeight,\r\n        'data-image-fit': imageFit,\r\n        'data-title-color': titleColor,\r\n        'data-title-font-size': titleFontSize,\r\n        'data-title-font-weight': titleFontWeight,\r\n        'data-excerpt-color': excerptColor,\r\n        'data-excerpt-font-size': excerptFontSize,\r\n        'data-excerpt-font-weight': excerptFontWeight,\r\n        'data-meta-color': metaColor,\r\n        'data-meta-font-size': metaFontSize,\r\n        'data-meta-font-weight': metaFontWeight,\r\n        'data-category-color': categoryColor,\r\n        'data-category-background-color': categoryBackgroundColor,\r\n        'data-category-border-radius': categoryBorderRadius,\r\n        'data-enable-animations': enableAnimations,\r\n        'data-animation-type': animationType,\r\n        'data-transition-animation': transitionAnimation,\r\n        'data-animation-duration': animationDuration,\r\n        'data-animation-delay': animationDelay,\r\n        'data-animation-ease': animationEase,\r\n        'data-enable-hover-effects': enableHoverEffects,\r\n        'data-hover-scale': hoverScale,\r\n        'data-hover-shadow': hoverShadow,\r\n        'data-overlay-opacity': overlayOpacity,\r\n        'data-overlay-gradient': overlayGradient,\r\n        'data-text-align': textAlign,\r\n        'data-container-mode': containerMode,\r\n        'data-container-max-width': JSON.stringify(containerMaxWidth),\r\n        'data-margin-top': JSON.stringify(marginTop),\r\n        'data-margin-right': JSON.stringify(marginRight),\r\n        'data-margin-bottom': JSON.stringify(marginBottom),\r\n        'data-margin-left': JSON.stringify(marginLeft),\r\n        'data-container-width': JSON.stringify(containerMaxWidth),\r\n        style: {\r\n            '--adaire-posts-grid-columns': `${columns}`,\r\n            '--adaire-posts-grid-gap': `${cardGap}px`,\r\n            '--adaire-posts-grid-border-radius': `${cardBorderRadius}px`,\r\n            '--adaire-posts-grid-padding': `${cardPadding}px`,\r\n            '--adaire-posts-grid-image-height': `${imageHeight}px`,\r\n            '--adaire-posts-grid-title-color': titleColor,\r\n            '--adaire-posts-grid-title-font-size': `${titleFontSize}px`,\r\n            '--adaire-posts-grid-title-font-weight': titleFontWeight,\r\n            '--adaire-posts-grid-excerpt-color': excerptColor,\r\n            '--adaire-posts-grid-excerpt-font-size': `${excerptFontSize}px`,\r\n            '--adaire-posts-grid-excerpt-font-weight': excerptFontWeight,\r\n            '--adaire-posts-grid-meta-color': metaColor,\r\n            '--adaire-posts-grid-meta-font-size': `${metaFontSize}px`,\r\n            '--adaire-posts-grid-meta-font-weight': metaFontWeight,\r\n            '--adaire-posts-grid-category-color': categoryColor,\r\n            '--adaire-posts-grid-category-background': categoryBackgroundColor,\r\n            '--adaire-posts-grid-category-border-radius': `${categoryBorderRadius}px`,\r\n            '--adaire-posts-grid-filter-border-radius': `${filterBorderRadius}px`,\r\n            '--adaire-posts-grid-pagination-border-radius': `${paginationBorderRadius}px`,\r\n            '--adaire-posts-grid-hover-scale': `${hoverScale}`,\r\n            '--adaire-posts-grid-overlay-opacity': `${overlayOpacity}`,\r\n            '--adaire-posts-grid-overlay-gradient': overlayGradient,\r\n            '--container-max-width': `${containerMaxWidth?.desktop?.value ?? containerMaxWidth?.value ?? 1200}${containerMaxWidth?.desktop?.unit ?? containerMaxWidth?.unit ?? 'px'}`,\r\n            '--container-max-width-tablet': `${containerMaxWidth?.tablet?.value ?? 100}${containerMaxWidth?.tablet?.unit ?? '%'}`,\r\n            '--container-max-width-mobile': `${containerMaxWidth?.mobile?.value ?? 100}${containerMaxWidth?.mobile?.unit ?? '%'}`,\r\n            marginTop: `${marginTop?.desktop ?? marginTop ?? 0}px`,\r\n            marginRight: `${marginRight?.desktop ?? marginRight ?? 0}px`,\r\n            marginBottom: `${marginBottom?.desktop ?? marginBottom ?? 0}px`,\r\n            marginLeft: `${marginLeft?.desktop ?? marginLeft ?? 0}px`,\r\n            '--margin-top-tablet': `${marginTop?.tablet ?? marginTop?.desktop ?? marginTop ?? 0}px`,\r\n            '--margin-right-tablet': `${marginRight?.tablet ?? marginRight?.desktop ?? marginRight ?? 0}px`,\r\n            '--margin-bottom-tablet': `${marginBottom?.tablet ?? marginBottom?.desktop ?? marginBottom ?? 0}px`,\r\n            '--margin-left-tablet': `${marginLeft?.tablet ?? marginLeft?.desktop ?? marginLeft ?? 0}px`,\r\n            '--margin-top-mobile': `${marginTop?.mobile ?? marginTop?.desktop ?? marginTop ?? 0}px`,\r\n            '--margin-right-mobile': `${marginRight?.mobile ?? marginRight?.desktop ?? marginRight ?? 0}px`,\r\n            '--margin-bottom-mobile': `${marginBottom?.mobile ?? marginBottom?.desktop ?? marginBottom ?? 0}px`,\r\n            '--margin-left-mobile': `${marginLeft?.mobile ?? marginLeft?.desktop ?? marginLeft ?? 0}px`,\r\n            textAlign: textAlign\r\n        }\r\n    });\r\n\r\n    return (\r\n        <div {...blockProps}>\r\n            <div className={`adaire-posts-grid__container ${containerMode === 'constrained' ? 'is-constrained' : ''}`}>\r\n                {enableFiltering && filterPosition === 'top' && (\r\n                    <div className=\"adaire-posts-grid__filters\">\r\n                        <div className=\"adaire-posts-grid__filter-list\">\r\n                            {/* Filter buttons will be populated by JavaScript */}\r\n                        </div>\r\n                    </div>\r\n                )}\r\n                <div className=\"adaire-posts-grid__grid\">\r\n                    {/* Posts will be populated by JavaScript */}\r\n                </div>\r\n                {enableFiltering && filterPosition === 'bottom' && (\r\n                    <div className=\"adaire-posts-grid__filters\">\r\n                        <div className=\"adaire-posts-grid__filter-list\">\r\n                            {/* Filter buttons will be populated by JavaScript */}\r\n                        </div>\r\n                    </div>\r\n                )}\r\n                {enablePagination && (\r\n                    <div className=\"adaire-posts-grid__pagination \">\r\n                        {/* Pagination will be populated by JavaScript */}\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport {};","module.exports = window[\"wp\"][\"apiFetch\"];","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"i18n\"];","module.exports = window[\"wp\"][\"primitives\"];","module.exports = window[\"React\"];","module.exports = window[\"ReactJSXRuntime\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t\"posts-grid-block/index\": 0,\n\t\"posts-grid-block/style-index\": 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = globalThis[\"webpackChunkadaire_blocks\"] = globalThis[\"webpackChunkadaire_blocks\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [\"posts-grid-block/style-index\"], () => (__webpack_require__(\"./src/posts-grid-block/index.js\")))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n",""],"names":["React","jsx","_jsx","jsxs","_jsxs","PostsGridIcon","width","height","viewBox","fill","xmlns","children","clipPath","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","id","__","useBlockProps","InspectorControls","PanelColorSettings","__experimentalUseCustomUnits","useCustomUnits","__experimentalUnitControl","UnitControl","PanelBody","PanelRow","SelectControl","ToggleControl","RangeControl","TextControl","Button","ButtonGroup","Placeholder","Spinner","Notice","__experimentalSpacingSizesControl","SpacingSizesControl","__experimentalBoxControl","BoxControl","TabPanel","useState","useEffect","apiFetch","desktop","tablet","mobile","Fragment","_Fragment","Edit","attributes","setAttributes","clientId","_ref","_containerMaxWidth$de","_ref2","_containerMaxWidth$de2","_containerMaxWidth$ta","_containerMaxWidth$ta2","_containerMaxWidth$mo","_containerMaxWidth$mo2","_ref3","_marginTop$desktop","_ref4","_marginRight$desktop","_ref5","_marginBottom$desktop","_ref6","_marginLeft$desktop","_ref7","_ref8","_marginTop$tablet","_ref9","_ref0","_marginRight$tablet","_ref1","_ref10","_marginBottom$tablet","_ref11","_ref12","_marginLeft$tablet","_ref13","_ref14","_marginTop$mobile","_ref15","_ref16","_marginRight$mobile","_ref17","_ref18","_marginBottom$mobile","_ref19","_ref20","_marginLeft$mobile","_containerMaxWidth$de3","_marginTop$deviceType","_marginRight$deviceTy","_marginBottom$deviceT","_marginLeft$deviceTyp","deviceType","setDeviceType","blockId","postsPerPage","enablePagination","paginationStyle","selectedCategories","selectedPosts","postType","excludeCurrentPost","showCategories","showDate","showAuthor","showReadTime","showExcerpt","excerptLength","layoutType","columns","enableFiltering","filterPosition","filterStyle","cardBorderRadius","cardPadding","cardGap","imageHeight","imageFit","titleColor","titleFontSize","titleFontWeight","excerptColor","excerptFontSize","excerptFontWeight","metaColor","metaFontSize","metaFontWeight","categoryColor","categoryBackgroundColor","categoryBorderRadius","filterBorderRadius","paginationBorderRadius","enableAnimations","animationType","transitionAnimation","animationDuration","animationDelay","animationEase","enableHoverEffects","hoverScale","hoverShadow","overlayOpacity","overlayGradient","textAlign","containerMode","containerMaxWidth","marginTop","marginRight","marginBottom","marginLeft","categories","setCategories","posts","setPosts","loading","setLoading","error","setError","responsiveColumns","setResponsiveColumns","updateResponsiveColumns","editorCanvas","document","querySelector","previewDevice","effectiveWidth","window","innerWidth","body","classList","contains","offsetWidth","addEventListener","observer","MutationObserver","observe","attributeFilter","resizeObserver","ResizeObserver","removeEventListener","disconnect","fetchData","console","log","testResponse","path","method","categoriesResponse","length","Array","isArray","catError","warn","apiEndpoint","postsPath","join","postsResponse","postsError","message","code","apiError","constructor","name","err","blockProps","className","style","value","unit","toggleCategory","categoryId","newCategories","includes","filter","togglePost","postId","newPosts","animationTypes","label","easeTypes","showErrorNotice","postsLength","title","initialOpen","type","onChange","parseInt","min","max","help","checked","options","maxHeight","overflowY","border","padding","map","category","display","count","isSmall","onClick","fontWeight","opt","isPrimary","isSecondary","step","withInputField","allowReset","colorSettings","icon","gap","v","Number","u","_containerMaxWidth$de4","_containerMaxWidth$de5","values","top","right","bottom","left","units","status","isDismissible","slice","gridTemplateColumns","post","index","open","link","cursor","rendered","featured_media","src","_embedded","source_url","alt","filteredCats","catId","find","cat","excerpt","replace","substring","Date","date","toLocaleDateString","author","from","Math","_","disabled","registerBlockType","save","metadata","edit","JSON","stringify"],"sourceRoot":""}